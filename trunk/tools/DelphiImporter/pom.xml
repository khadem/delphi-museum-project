<?xml version="1.0" encoding="UTF-8"?>
<project 
	xmlns="http://maven.apache.org/POM/4.0.0" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>edu.berkeley.delphi</groupId>
    <artifactId>delphi</artifactId>
    <name>delphi.main</name>
		<version>0.9.1-SNAPSHOT</version>
    <packaging>pom</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <delphi.version>0.9.1-SNAPSHOT</delphi.version>
    </properties>

		<modules>
				<module>utils</module>
				<module>media</module>
        <module>config</module>
				<module>ontology</module>
				<module>dbextract</module>
				<module>mdingest</module>
        <module>dbload</module>
        <module>categorizer</module>
				<module>app</module>
    </modules>

    <repositories>
        <repository>
            <id>repo1</id>
            <name>Maven repo1</name>
            <url>http://repo1.maven.org/maven2</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>repo2</id>
            <name>Maven repo2</name>
            <url>http://repo2.maven.org/maven2</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>maven2-repository.dev.java.net</id>
            <name>Java.net Maven 2 Repository</name>
            <url>http://download.java.net/maven/2</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
				<!--
        <repository>
            <id>maven1-repository.dev.java.net</id>
            <name>Java.net Maven 1 Repository</name>
            <url>http://download.java.net/maven/1</url>
            <layout>legacy</layout>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
				</repository>
				-->
   </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>maven repo</id>
            <name>maven repo</name>
            <url>http://repo2.maven.org/maven2</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
        <pluginRepository>
            <id>maven2-repository.dev.java.net</id>
            <url>http://download.java.net/maven/2</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
        <pluginRepository>
            <id>Codehaus Repository</id>
            <url>http://repository.codehaus.org/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>2.6.1</version>
                    <configuration>
                        <show>public</show>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>                    
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>2.3</version>
                    <configuration>
                        <source>1.6</source>
                        <target>1.6</target>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <configuration> </configuration>
                </plugin>
 
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>2.2</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>classpath</id>
                            <goals>
                                <goal>build-classpath</goal>
                            </goals>
                            <configuration>
                                <outputFile>classpath</outputFile>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
                <plugin>
                	<groupId>org.eclipse.m2e</groupId>
                	<artifactId>lifecycle-mapping</artifactId>
                	<version>1.0.0</version>
                	<configuration>
                		<lifecycleMappingMetadata>
                			<pluginExecutions>
                				<pluginExecution>
                					<pluginExecutionFilter>
                						<groupId>
                							org.codehaus.mojo
                						</groupId>
                						<artifactId>
                							properties-maven-plugin
                						</artifactId>
                						<versionRange>
                							[1.0-alpha-2,)
                						</versionRange>
                						<goals>
                							<goal>
                								read-project-properties
                							</goal>
                						</goals>
                					</pluginExecutionFilter>
                					<action>
                						<ignore></ignore>
                					</action>
                				</pluginExecution>
                			</pluginExecutions>
                		</lifecycleMappingMetadata>
                	</configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
          <plugin>
             <groupId>org.apache.maven.plugins</groupId>
             <artifactId>maven-compiler-plugin</artifactId>
          </plugin>

					<!-- Declare the sql plugin, and run the initdb sql.
							 Note that since we do not want this to run each build, 
							 You must run it explicitly. However, you still need the
							 build.properties include, so invoke this with:
							 mvn initialize sql:execute -->
					 <plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>sql-maven-plugin</artifactId>
						<version>1.5</version>

						<dependencies>
							<!-- specify the dependent jdbc driver here -->
						 <dependency>
								<groupId>mysql</groupId>
								<artifactId>mysql-connector-java</artifactId>
								<version>5.1.13</version>
							</dependency>
						</dependencies>
						<!-- common configuration shared by all executions -->
						<configuration>
							<driver>com.mysql.jdbc.Driver</driver>
							<url>jdbc:mysql://localhost</url>
							<username>root</username>
							<password>admin</password>jdbc:mysql://localhost
						</configuration>
						<executions>
							<!-- Declare this only to run on the explicit goal, so we do not
									 blow away our DB with every build. -->
					 		<execution>
								<id>default-cli</id>
								<phase>none</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								<configuration>
									<autocommit>true</autocommit>
									<forceMojoExecution>true</forceMojoExecution>
									<srcFiles>
										<!-- Dummy entry, so this will recurse for all the dirs -->
									</srcFiles>
								</configuration>
							</execution>
						</executions>
					</plugin>
       </plugins>
				
    </build>
    
    <dependencies>
				<!--
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <scope>test</scope>
            <classifier>jdk15</classifier>
        </dependency>
				-->
    </dependencies>

    <dependencyManagement>
			<dependencies>
				<!--
				<dependency>
					<groupId>edu.berkeley.delphi</groupId>
					<artifactId>delphi.categorizer</artifactId>
					<version>${project.version}</version>
				</dependency>
				<dependency>
					<groupId>edu.berkeley.delphi</groupId>
					<artifactId>delphi.config</artifactId>
					<version>${project.version}</version>
				</dependency>
				<dependency>
					<groupId>edu.berkeley.delphi</groupId>
					<artifactId>delphi.dbextract</artifactId>
					<version>${project.version}</version>
				</dependency>
				<dependency>
					<groupId>edu.berkeley.delphi</groupId>
					<artifactId>delphi.dbload</artifactId>
					<version>${project.version}</version>
				</dependency>
				<dependency>
					<groupId>edu.berkeley.delphi</groupId>
					<artifactId>delphi.mdingest</artifactId>
					<version>${project.version}</version>
				</dependency>
				<dependency>
					<groupId>edu.berkeley.delphi</groupId>
					<artifactId>delphi.media</artifactId>
					<version>${project.version}</version>
				</dependency>
				<dependency>
					<groupId>edu.berkeley.delphi</groupId>
					<artifactId>delphi.ontology</artifactId>
					<version>${project.version}</version>
				</dependency>
				-->
				 <dependency>
						<groupId>mysql</groupId>
						<artifactId>mysql-connector-java</artifactId>
						<version>5.1.13</version>
						<scope>provided</scope>
					</dependency>
				</dependencies>
			</dependencyManagement>
	</project>
